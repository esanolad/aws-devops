Parameters:
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  SolVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: stack
          Value: smart-sol
        - Key: Name
          Value: smart-sol-vpc
  SolInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: smart-sol-gtw
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: SolVPC
      InternetGatewayId:
        Ref: SolInternetGateway
  SolRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: SolVPC
  SolRoute:
    Type: AWS::EC2::Route
    DependsOn: SolInternetGateway
    Properties:
       RouteTableId:
         Ref: SolRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: SolInternetGateway
  SetMainRouteTable:
    Type: "AWS::EC2::VPCDefaultRouteTable"
    Properties:
      VpcId: !Ref SolVPC
      DefaultRouteTableId: !Ref SolRouteTable
  DevSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SolVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "ca-central-1a"
      Tags:
      - Key: stack
        Value: dev
      - Key: Name
        Value: Sol-dev-subnet
      MapPublicIpOnLaunch: true
  StagingSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SolVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: "ca-central-1b"
      Tags:
      - Key: stack
        Value: staging
      - Key: Name
        Value: Sol-staging-subnet   
      MapPublicIpOnLaunch: true     
  ProdSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SolVPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: "ca-central-1d"
      Tags:
      - Key: stack
        Value: production
      - Key: Name
        Value: sol-prod-subnet    
      MapPublicIpOnLaunch: true    
  InstanceSSHSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn: SolVPC
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref SolVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '9100'
          ToPort: '9100'
          CidrIp: !Ref SSHLocation
      Tags:
      - Key: Name
        Value: sol-ssh-sg       
  InstanceHTTPSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn: SolVPC
    Properties:
      GroupDescription: Enable SSH and WEB Access
      VpcId: !Ref SolVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref SSHLocation    
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation  
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref SSHLocation  
      Tags:
      - Key: Name
        Value: sol-http-sg    
Outputs:
  EC2SSHSecurityGroup:
    Description: Security Group to be used in EC2
    Value: !GetAtt 
      - InstanceSSHSecurityGroup
      - GroupId
    Export:
      Name: !Sub '${AWS::StackName}-EC2SSHSecurityGroup'
  EC2HTTPSecurityGroup:
    Description: Security Group to be used in EC2
    Value: !GetAtt 
      - InstanceHTTPSecurityGroup
      - GroupId
    Export:
      Name: !Sub '${AWS::StackName}-EC2HTTPSecurityGroup'
  DevSubnetId:
    Description: ID of the dev subnet Id
    Value: !GetAtt 
      - DevSubnet
      - SubnetId
    Export:
      Name: !Sub '${AWS::StackName}-DevSubnetId'